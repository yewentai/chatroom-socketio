Project file structure for './':
├── package.json
├── project_code_export.txt
├── public
│   └── index.html
├── src
│   ├── App.tsx
│   ├── components
│   │   ├── ChatRoom.tsx
│   │   ├── MessageInput.tsx
│   │   ├── MessageList.tsx
│   │   └── UserList.tsx
│   ├── hooks
│   │   └── useSocket.ts
│   ├── index.tsx
│   ├── react-app-env.d.ts
│   └── types
│       └── index.ts
├── tailwind.config.js
└── tsconfig.json

===== ./tailwind.config.js =====
module.exports = {
  purge: ['./src/**/*.{js,jsx,ts,tsx}', './public/index.html'],
  darkMode: false, // or 'media' or 'class'
  theme: {
    extend: {},
  },
  variants: {
    extend: {},
  },
  plugins: [],
}

===== ./package.json =====
{
  "name": "chatroom-socketio",
  "version": "1.0.0",
  "private": true,
  "scripts": {
    "start": "react-scripts --openssl-legacy-provider start",
    "build": "react-scripts --openssl-legacy-provider build",
    "test": "react-scripts test",
    "eject": "react-scripts eject"
  },
  "dependencies": {
    "react": "^17.0.2",
    "react-dom": "^17.0.2",
    "react-scripts": "4.0.3",
    "socket.io-client": "^4.0.0",
    "tailwindcss": "^2.2.19"
  },
  "devDependencies": {
    "@types/react": "^17.0.87",
    "@types/react-dom": "^17.0.26",
    "autoprefixer": "^10.3.7",
    "postcss": "^8.3.6",
    "typescript": "^4.4.4"
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}


===== ./tsconfig.json =====
{
  "compilerOptions": {
    "target": "es5",
    "lib": [
      "dom",
      "dom.iterable",
      "esnext"
    ],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "forceConsistentCasingInFileNames": true,
    "noEmit": true,
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "node",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "react-jsx",
    "allowSyntheticDefaultImports": true,
    "noFallthroughCasesInSwitch": true
  },
  "include": [
    "src"
  ],
  "exclude": [
    "node_modules"
  ]
}


===== ./src/react-app-env.d.ts =====
/// <reference types="react-scripts" />


===== ./src/types/index.ts =====
export interface Message {
    id: string;
    userId: string;
    content: string;
    timestamp: Date;
}

export interface User {
    id: string;
    username: string;
}

export interface ChatRoom {
    id: string;
    messages: Message[];
    users: User[];
}

===== ./src/hooks/useSocket.ts =====
import { useEffect, useRef } from 'react';
import { io, Socket } from 'socket.io-client';

export const useSocket = (serverUrl: string = 'http://localhost:3001') => {
    const socketRef = useRef<Socket | null>(null);

    useEffect(() => {
        socketRef.current = io(serverUrl);

        return () => {
            socketRef.current?.disconnect();
        };
    }, [serverUrl]);

    return socketRef.current;
};

